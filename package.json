{
  "name": "123hansa-marketplace",
  "version": "1.0.0",
  "description": "123hansa.se - Nordic Business Marketplace Platform",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "postinstall": "mkdir -p packages/shared/src packages/ui/src && echo 'export {};' > packages/shared/src/index.ts && echo 'export {};' > packages/ui/src/index.ts && echo '{\"name\":\"@gohansa/shared\",\"version\":\"1.0.0\",\"main\":\"src/index.ts\"}' > packages/shared/package.json && echo '{\"name\":\"@gohansa/ui\",\"version\":\"1.0.0\",\"main\":\"src/index.ts\"}' > packages/ui/package.json",
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:web\"",
    "dev:api": "npm run dev --workspace=apps/api",
    "dev:web": "npm run dev --workspace=apps/web",
    "dev:admin": "npm run dev --workspace=apps/admin",
    "build": "cd apps/web && npm install --include=dev && npm run build",
    "build:web": "bash verify-structure.sh && cd apps/web && npm install && npm run build",
    "vercel:setup": "node -e \"const fs = require('fs'); fs.mkdirSync('packages/shared/src', {recursive: true}); fs.mkdirSync('packages/ui/src', {recursive: true}); fs.writeFileSync('packages/shared/src/index.ts', 'export {};'); fs.writeFileSync('packages/ui/src/index.ts', 'export {};'); fs.writeFileSync('packages/shared/package.json', JSON.stringify({name: '@gohansa/shared', version: '1.0.0', main: 'src/index.ts'})); fs.writeFileSync('packages/ui/package.json', JSON.stringify({name: '@gohansa/ui', version: '1.0.0', main: 'src/index.ts'})); console.log('Workspace structure created');\"",
    "vercel:build": "npm run vercel:setup && cd apps/web && npm install --include=dev && npm run build && cd ../.. && node -e \"const fs = require('fs'); if (fs.existsSync('apps/web/dist')) { fs.cpSync('apps/web/dist', 'dist', {recursive: true}); console.log('Build copied to dist'); } else { console.error('Build failed - no dist directory'); process.exit(1); }\"",
    "build:development": "NODE_ENV=development npm run build --workspaces",
    "build:staging": "NODE_ENV=staging npm run build --workspaces",
    "build:production": "NODE_ENV=production npm run build --workspaces",
    "test": "npm run test --workspaces",
    "test:ci": "npm run test --workspaces -- --coverage --watchAll=false",
    "lint": "npm run lint --workspaces",
    "lint:fix": "npm run lint --workspaces -- --fix",
    "type-check": "npm run type-check --workspaces",
    "clean": "rimraf node_modules apps/*/node_modules packages/*/node_modules",
    "setup": "npm install && npm run build --workspace=packages/shared && npm run build --workspace=packages/ui",
    "deploy": "./scripts/production-deploy.sh",
    "deploy:staging": "git push origin staging",
    "deploy:production": "git push origin main",
    "deploy:rollback": "./scripts/production-deploy.sh rollback",
    "health-check": "./scripts/production-deploy.sh health",
    "db:migrate": "cd apps/api && npx prisma migrate deploy",
    "db:generate": "cd apps/api && npx prisma generate",
    "db:studio": "cd apps/api && npx prisma studio",
    "db:seed": "cd apps/api && npx prisma db seed",
    "db:reset": "cd apps/api && npx prisma migrate reset",
    "docker:build": "docker build -f Dockerfile.production -t hansa123:latest .",
    "docker:up": "docker-compose -f docker-compose.production.yml up -d",
    "docker:down": "docker-compose -f docker-compose.production.yml down",
    "docker:logs": "docker-compose -f docker-compose.production.yml logs -f",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "performance:test": "lighthouse-ci autorun",
    "start": "cd apps/api && node dist/index.js",
    "start:cluster": "cd apps/api && pm2 start dist/index.js --name hansa123-api --instances max",
    "logs": "pm2 logs hansa123-api",
    "monitor": "pm2 monit",
    "restart": "pm2 restart hansa123-api",
    "stop": "pm2 stop hansa123-api"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.13.0",
    "@typescript-eslint/parser": "^6.13.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "typescript": "^5.3.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/123hansa/123hansa-marketplace"
  },
  "keywords": [
    "marketplace",
    "business",
    "nordic",
    "sweden",
    "norway",
    "denmark",
    "flippa",
    "b2b"
  ],
  "author": "123hansa Team",
  "license": "UNLICENSED",
  "dependencies": {
    "@sentry/node": "^9.36.0",
    "@sentry/profiling-node": "^9.36.0",
    "@sentry/react": "^9.36.0",
    "@sentry/vite-plugin": "^3.5.0",
    "cors": "^2.8.5",
    "express": "^4.21.2"
  }
}
